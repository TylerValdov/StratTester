version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15
    container_name: trading_db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: trading_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis (Message Broker for Celery)
  redis:
    image: redis:7-alpine
    container_name: trading_redis
    ports:
      - "6380:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # FastAPI Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: trading_backend
    environment:
      DATABASE_URL: postgresql+asyncpg://postgres:postgres@db:5432/trading_db
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
      ALPACA_API_KEY: ${ALPACA_API_KEY:-}
      ALPACA_API_SECRET: ${ALPACA_API_SECRET:-}
      ALPACA_BASE_URL: ${ALPACA_BASE_URL:-https://paper-api.alpaca.markets}
      ALPACA_DATA_URL: ${ALPACA_DATA_URL:-https://data.alpaca.markets}
    volumes:
      - ./backend:/app
    ports:
      - "8001:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload

  # Celery Worker (Background Task Processor)
  worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: trading_worker
    environment:
      DATABASE_URL: postgresql+asyncpg://postgres:postgres@db:5432/trading_db
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
      ALPACA_API_KEY: ${ALPACA_API_KEY:-}
      ALPACA_API_SECRET: ${ALPACA_API_SECRET:-}
      ALPACA_BASE_URL: ${ALPACA_BASE_URL:-https://paper-api.alpaca.markets}
      ALPACA_DATA_URL: ${ALPACA_DATA_URL:-https://data.alpaca.markets}
    volumes:
      - ./backend:/app
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: celery -A app.core.celery_app worker -l info

  # React Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: trading_frontend
    environment:
      VITE_API_URL: http://localhost:8001/api/v1
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "5173:5173"
    depends_on:
      - backend

volumes:
  postgres_data:
